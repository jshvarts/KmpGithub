apply plugin: 'com.android.library'
apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlin-android-extensions'
apply plugin: "org.jetbrains.kotlin.native.cocoapods"
apply plugin: "kotlinx-serialization"

android {
  compileSdkVersion versions.compileSdk
  defaultConfig {
    minSdkVersion versions.minSdk
  }
}

kotlin {
  targets {
    fromPreset(presets.android, "android")

    def buildForDevice = project.findProperty("device")?.toBoolean() ?: false
    def iosTarget = (buildForDevice) ? presets.iosArm64 : presets.iosX64

    fromPreset(iosTarget, "ios") {
      binaries {
        compilations.main.kotlinOptions.freeCompilerArgs += "-Xobjc-generics"
        framework("shared") {
          isStatic = false
          linkerOpts.add("-lsqlite3")

          // Disable bitcode embedding for the simulator build.
          if (!buildForDevice) {
            embedBitcode("disable")
          }
        }
      }
    }
  }

  cocoapods {
    // Configure fields required by CocoaPods.
    summary = "Native ios target"
    homepage = "Link to a Kotlin/Native module"
  }

  sourceSets {
    commonMain {
      dependencies {
        implementation kotlin('stdlib-common')
        implementation deps.coroutines.coreCommon
        implementation deps.ktorClient.core
        implementation deps.ktorClient.jsonCommon
        implementation deps.ktorClient.logging
        implementation deps.ktorClient.clientSerialization
        implementation deps.ktorClient.serialization
        implementation deps.serialization.runtimeCommon
        implementation deps.timber.common
      }
    }
    commonTest {
      dependencies {
        implementation kotlin('test-common')
        implementation kotlin('test-annotations-common')
      }
    }
    androidMain {
      dependencies {
        implementation kotlin('stdlib')
        implementation deps.androidx.appCompat
        implementation deps.androidx.preferences
        implementation deps.coroutines.android
        implementation deps.ktorClient.android
        implementation deps.ktorClient.coreJvm
        implementation deps.ktorClient.serializationJvm
        implementation deps.serialization.serializationRuntime
        implementation deps.serialization.runtimeJvm
        implementation deps.ktorClient.loggingJvm
        implementation deps.ktorClient.serialization
      }
    }
    androidTest {
      dependencies {
        implementation kotlin('test')
        implementation kotlin('test-junit')
      }
    }
    iosMain {
      dependencies {
        implementation deps.coroutines.native
        implementation deps.ktorClient.ios
        implementation deps.ktorClient.coreNative
        implementation deps.ktorClient.jsonNative
        implementation deps.ktorClient.loggingNative
        implementation deps.ktorClient.serializationNative
        implementation deps.serialization.serializationRuntime
      }
    }
    iosTest {}

    all {
      languageSettings {
        enableLanguageFeature('InlineClasses')
        useExperimentalAnnotation('kotlin.Experimental')
      }
    }
  }
}

// CocoaPods requires the podspec to have a version.
version = 1.0

dependencies {}

task checkiOS {
  def device = project.findProperty("iosDevice")?.toString() ?: "iPhone 8"
  dependsOn 'linkDebugTestIos'
  group = JavaBasePlugin.VERIFICATION_GROUP
  description = "Runs tests for target 'ios' on an iOS simulator"
}
tasks.check.dependsOn checkiOS
